#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass paper
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
PROJECT 3: 
\end_layout

\begin_layout SubTitle
Project with NuSMV 
\end_layout

\begin_layout Author
Nikolay Nikolov
\end_layout

\begin_layout Date
Summer 2020
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
Problem 2
\end_layout

\begin_layout Description
Tasks: 
\end_layout

\begin_layout Description
1) Read the tutorial of Nusmv 2.5 and learn the syntax, draw the state diagram
 of above code.
 
\end_layout

\begin_layout Subsection*
Verify formula
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > read_model -i short.smv 
\end_layout

\begin_layout Plain Layout

NuSMV > flatten_hierarchy 
\end_layout

\begin_layout Plain Layout

NuSMV > encode_variables 
\end_layout

\begin_layout Plain Layout

NuSMV > build_model 
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec
\end_layout

\begin_layout Plain Layout

-- specification AG (request -> AF state = busy)  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "AG(request ->AX(state=busy))
\end_layout

\begin_layout Plain Layout

ignoring unbalanced quote ...
\end_layout

\begin_layout Plain Layout

-- specification AG (request -> AX state = busy)  is false
\end_layout

\begin_layout Plain Layout

-- as demonstrated by the following execution sequence
\end_layout

\begin_layout Plain Layout

Trace Description: CTL Counterexample 
\end_layout

\begin_layout Plain Layout

Trace Type: Counterexample 
\end_layout

\begin_layout Plain Layout

  -- Loop starts here
\end_layout

\begin_layout Plain Layout

  -> State: 1.1 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.2 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = busy
\end_layout

\begin_layout Plain Layout

  -> State: 1.3 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

NuSMV > 
\end_layout

\begin_layout Plain Layout

*******  Simulation Starting From State 1.4   ********
\end_layout

\begin_layout Plain Layout

NuSMV > show_traces -v  
\end_layout

\begin_layout Plain Layout

    <!-- ################### Trace number: 1 ################### -->
\end_layout

\begin_layout Plain Layout

Trace Description: Simulation Trace 
\end_layout

\begin_layout Plain Layout

Trace Type: Simulation 
\end_layout

\begin_layout Plain Layout

  -> State: 1.1 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.2 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.3 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = busy
\end_layout

\begin_layout Plain Layout

  -> State: 1.4 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.5 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.6 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = busy
\end_layout

\begin_layout Plain Layout

  -> State: 1.7 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.8 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

  -> State: 1.9 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = busy
\end_layout

\begin_layout Plain Layout

  -> State: 1.10 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = busy
\end_layout

\begin_layout Plain Layout

  -> State: 1.11 <-
\end_layout

\begin_layout Plain Layout

    request = TRUE
\end_layout

\begin_layout Plain Layout

    state = busy
\end_layout

\begin_layout Plain Layout

  -> State: 1.12 <-
\end_layout

\begin_layout Plain Layout

    request = FALSE
\end_layout

\begin_layout Plain Layout

    state = ready
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
State Diagram
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename /home/nik/Documents/582_PROJ/projects/project_3/assets/state_diagram_problem2.png

\end_inset


\end_layout

\begin_layout Subsection*
Come up with 3 more CTL properties and check against the model.
 
\end_layout

\begin_layout Subsubsection*
1)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "AG(request -> EF(state=busy))" 
\end_layout

\begin_layout Plain Layout

-- specification AG (request -> EF state = busy)  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
2)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(request -> AG(state=busy))"
\end_layout

\begin_layout Plain Layout

-- specification EF (request -> AG state = busy)  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
3)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(request -> AG(state=busy))"
\end_layout

\begin_layout Plain Layout

-- specification EF (request -> AG state = busy)  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
4)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "AG(request -> EF(state=ready))"
\end_layout

\begin_layout Plain Layout

-- specification AG (request -> EF state = ready)  is true
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Problem 3:
\end_layout

\begin_layout Subsection*
State Diagram
\end_layout

\begin_layout Description
\begin_inset Graphics
	filename /home/nik/Documents/582_PROJ/projects/project_3/assets/state_diagram.png

\end_inset


\end_layout

\begin_layout Subsubsection*
Trace
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > read_model -i counter.smv
\end_layout

\begin_layout Plain Layout

NuSMV > flatten_hierarchy 
\end_layout

\begin_layout Plain Layout

NuSMV > encode_variables 
\end_layout

\begin_layout Plain Layout

NuSMV > build_model 
\end_layout

\begin_layout Plain Layout

NuSMV > pick_state -i
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

***************  AVAILABLE STATES  *************
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  ================= State =================
\end_layout

\begin_layout Plain Layout

  0) -------------------------
\end_layout

\begin_layout Plain Layout

  bit0.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  bit0.value = FALSE
\end_layout

\begin_layout Plain Layout

  bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  bit1.value = FALSE
\end_layout

\begin_layout Plain Layout

  bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  bit2.value = FALSE
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

********  Simulation Starting From State 1.4   ********
\end_layout

\begin_layout Plain Layout

NuSMV > show_traces -v  
\end_layout

\begin_layout Plain Layout

    <!-- ################### Trace number: 1 ################### -->
\end_layout

\begin_layout Plain Layout

Trace Description: Simulation Trace 
\end_layout

\begin_layout Plain Layout

Trace Type: Simulation 
\end_layout

\begin_layout Plain Layout

  -> State: 1.1 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.2 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.3 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit2.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.4 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit2.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = TRUE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.5 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.6 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.7 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit2.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = FALSE
\end_layout

\begin_layout Plain Layout

  -> State: 1.8 <-
\end_layout

\begin_layout Plain Layout

    bit0.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit2.value = TRUE
\end_layout

\begin_layout Plain Layout

    bit0.carry_out = TRUE
\end_layout

\begin_layout Plain Layout

    bit1.carry_out = TRUE
\end_layout

\begin_layout Plain Layout

    bit2.carry_out = TRUE
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\SpecialChar allowbreak

\end_layout

\begin_layout Subsection*
2) Come up with 3 more CTL property and check against above model.
\end_layout

\begin_layout Subsection*
1)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(bit1.value=TRUE)"
\end_layout

\begin_layout Plain Layout

-- specification EF bit1.value = TRUE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
2)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(bit2.value=TRUE)"
\end_layout

\begin_layout Plain Layout

-- specification EF bit2.value = TRUE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
3) 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(bit0.value=TRUE)"
\end_layout

\begin_layout Plain Layout

-- specification EF bit0.value = TRUE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
4)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(bit0.value=TRUE)"
\end_layout

\begin_layout Plain Layout

-- specification EF bit0.value = TRUE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
5)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EX(bit0.value=TRUE)"
\end_layout

\begin_layout Plain Layout

-- specification EX bit0.value = TRUE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
6)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(bit0.carry_out=FALSE)"
\end_layout

\begin_layout Plain Layout

-- specification EF bit0.carry_out = FALSE  is true
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
7) 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(bit0.value=FALSE)"
\end_layout

\begin_layout Plain Layout

-- specification EF bit0.value = FALSE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
8)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "AX(bit0.carry_out=TRUE)" 
\end_layout

\begin_layout Plain Layout

-- specification AX bit0.carry_out = TRUE  is true
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Problem 4:
\end_layout

\begin_layout Subsection*
Tasks:
\end_layout

\begin_layout Subsubsection*
1) Understand the design and draw the transition diagram for the design
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename /home/nik/Documents/582_PROJ/projects/project_3/assets/state_diagram_problem4
	scale 60

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State Diagram for Microwave
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
2) Propose 5 new CTL properties.
 Describe them in English first, then in CTL forms.
 Your properties should be different from those proposed by other students.
\end_layout

\begin_layout Standard
\noindent
1.
 If a startOven signal occurs then there is eventually a closeDoor signal
\end_layout

\begin_layout Standard
AG (startOven 
\begin_inset Formula $\rightarrow$
\end_inset

 AF closeDoor)
\end_layout

\begin_layout Standard
\noindent
2.
 If a startOven signal occurs then there is eventually a not closeDoor signal
\end_layout

\begin_layout Standard
AG (startOven 
\begin_inset Formula $\rightarrow$
\end_inset

 AF ~closeDoor)
\end_layout

\begin_layout Standard
\noindent
3.
 If eventually a reset signal occurs then eventually a startOven signal
 will occur
\end_layout

\begin_layout Standard
AF (reset 
\begin_inset Formula $\rightarrow$
\end_inset

 EF startOven)
\end_layout

\begin_layout Standard
\noindent
4.
 For all paths startOven signal will not occur until closeDoor occurs
\end_layout

\begin_layout Standard
AG (startOven 
\begin_inset Formula $\cup$
\end_inset

 closeDoor)
\end_layout

\begin_layout Standard
\noindent
5.
 The signal closedDoor holds infinitely often
\end_layout

\begin_layout Standard
AF closedDoor
\end_layout

\begin_layout Standard
\noindent
\align left
6.
 The signal startOven holds infinitely often
\end_layout

\begin_layout Standard
AF startOven
\end_layout

\begin_layout Subsubsection*
3) Create Verilog test benches and run simulation to verify your properties,
 justify your test result.
 (show the test result in script form instead of wave form)
\end_layout

\begin_layout Subsubsection*
\noindent
Testbench
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

`timescale 1 ns/10 ps
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

module tb_microwave();
\end_layout

\begin_layout Plain Layout

   reg  clk, sys_reset, reset, closeDoor, startOven, done;
\end_layout

\begin_layout Plain Layout

   wire Start, Close, Heat, Error;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   microwave DUT (
\end_layout

\begin_layout Plain Layout

                  .clk(clk),
\end_layout

\begin_layout Plain Layout

                  .sys_reset(sys_reset), 
\end_layout

\begin_layout Plain Layout

                  .reset(reset), 
\end_layout

\begin_layout Plain Layout

                  .closeDoor(closeDoor), 
\end_layout

\begin_layout Plain Layout

                  .startOven(startOven), 
\end_layout

\begin_layout Plain Layout

                  .done(done),
\end_layout

\begin_layout Plain Layout

                  .Start(Start),
\end_layout

\begin_layout Plain Layout

                  .Close(Close),
\end_layout

\begin_layout Plain Layout

                  .Heat(Heat),
\end_layout

\begin_layout Plain Layout

                  .Error(Error)
\end_layout

\begin_layout Plain Layout

                  );
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   initial
\end_layout

\begin_layout Plain Layout

     begin
\end_layout

\begin_layout Plain Layout

        #20 sys_reset = 1'b1;
\end_layout

\begin_layout Plain Layout

        #20 sys_reset = 1'b0;
\end_layout

\begin_layout Plain Layout

     end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   initial
\end_layout

\begin_layout Plain Layout

     begin
\end_layout

\begin_layout Plain Layout

        clk= 1'b0;
\end_layout

\begin_layout Plain Layout

     end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   always
\end_layout

\begin_layout Plain Layout

     begin
\end_layout

\begin_layout Plain Layout

        #5 clk= ~clk;
\end_layout

\begin_layout Plain Layout

     end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   initial
\end_layout

\begin_layout Plain Layout

     begin
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b0; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b0; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b0; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b1;
 
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b0; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b1; reset = 1'b0; done = 1'b0;
 
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b1; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b1;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b0; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b0; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b1; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b1; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b1; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

        #40 closeDoor = 1'b0; startOven = 1'b1; reset = 1'b0; done = 1'b0;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

     end
\end_layout

\begin_layout Plain Layout

  initial 
\end_layout

\begin_layout Plain Layout

    begin
\end_layout

\begin_layout Plain Layout

       $display(" Start Close Heat Error|       startOven closeDoor reset
 done ");
\end_layout

\begin_layout Plain Layout

       $monitor(" %1b   %1b     %1b     %1b|         %1b    %1b     %1b
     %1b ", Start, Close, Heat, Error, startOven, closeDoor, reset, done);
\end_layout

\begin_layout Plain Layout

    end
\end_layout

\begin_layout Plain Layout

   
\end_layout

\begin_layout Plain Layout

  initial
\end_layout

\begin_layout Plain Layout

    begin  
\end_layout

\begin_layout Plain Layout

       #1000 $finish;
\end_layout

\begin_layout Plain Layout

    end 
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

endmodule //tb_microwave
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Trace from Testbench
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Loading work.microwave
\end_layout

\begin_layout Plain Layout

run -all
\end_layout

\begin_layout Plain Layout

#  Start Close Heat Error| startOven closeDoor reset done 
\end_layout

\begin_layout Plain Layout

#  x   x     x     x|         x    x     x     x 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         x    x     x     x 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         0    0     0     0 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         0    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     0     0|         0    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     0     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  1   1     0     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  1   1     1     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  0   1     0     0|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  1   1     0     0|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  1   1     1     0|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         0    0     0     0 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         0    0     0     0 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  1   1     0     1|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  0   1     0     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  1   1     0     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  1   1     1     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  1   1     1     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  1   1     0     1|         1    1     0     1 
\end_layout

\begin_layout Plain Layout

#  1   1     0     1|         0    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         0    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  1   1     0     1|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  1   1     0     1|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  0   1     0     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  1   1     0     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  1   1     1     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     1     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    1     0     0 
\end_layout

\begin_layout Plain Layout

#  0   1     1     0|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  0   0     0     0|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

#  1   0     0     1|         1    0     0     0 
\end_layout

\begin_layout Plain Layout

# ** Note: $finish    : /home/nik/Documents/582_PROJ/projects/project_3/source/t
b_microwave.v(69)
\end_layout

\begin_layout Plain Layout

#    Time: 1 us  Iteration: 0  Instance: /tb_microwave
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
4) Model the design in NuSMV
\end_layout

\begin_layout Subsubsection*
Model in NuSMV
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

MODULE main
\end_layout

\begin_layout Plain Layout

VAR
\end_layout

\begin_layout Plain Layout

    closeDoor : boolean;
\end_layout

\begin_layout Plain Layout

    startOven : boolean;
\end_layout

\begin_layout Plain Layout

    reset 	:boolean;
\end_layout

\begin_layout Plain Layout

    done 	:boolean;
\end_layout

\begin_layout Plain Layout

    state : {0000,0100,1001,1100,1110,0110,1101};
\end_layout

\begin_layout Plain Layout

ASSIGN
\end_layout

\begin_layout Plain Layout

    init(state) := 0000;
\end_layout

\begin_layout Plain Layout

    next (state) := case
\end_layout

\begin_layout Plain Layout

        state = 0000 & closeDoor = TRUE: 0100;
\end_layout

\begin_layout Plain Layout

	state = 0000 & startOven = TRUE: 1001;
\end_layout

\begin_layout Plain Layout

	state = 0100 & startOven = TRUE: 1100;
\end_layout

\begin_layout Plain Layout

	state = 1001 & closeDoor = TRUE: 1101;
\end_layout

\begin_layout Plain Layout

	state = 1101 & reset = TRUE : 0100;
\end_layout

\begin_layout Plain Layout

	state = 1100 : 1110;
\end_layout

\begin_layout Plain Layout

	state = 1110 : 0110; 
\end_layout

\begin_layout Plain Layout

	state = 0110 & closeDoor = FALSE : 0000;
\end_layout

\begin_layout Plain Layout

	state = 0110 & done = TRUE : 0100;
\end_layout

\begin_layout Plain Layout

	state = 0100 & closeDoor = FALSE : 0000;
\end_layout

\begin_layout Plain Layout

        TRUE : {0000,0100,1001,1100,1110,0110,1101};
\end_layout

\begin_layout Plain Layout

esac;
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Trace from NuSMV
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > show_traces -t
\end_layout

\begin_layout Plain Layout

There are 2 traces currently available.
\end_layout

\begin_layout Plain Layout

NuSMV > show_traces -v
\end_layout

\begin_layout Plain Layout

    <!-- ################### Trace number: 2 ################### -->
\end_layout

\begin_layout Plain Layout

Trace Description: Simulation Trace 
\end_layout

\begin_layout Plain Layout

Trace Type: Simulation 
\end_layout

\begin_layout Plain Layout

  -> State: 2.1 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -> State: 2.2 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1001
\end_layout

\begin_layout Plain Layout

  -> State: 2.3 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 1100
\end_layout

\begin_layout Plain Layout

  -> State: 2.4 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 1110
\end_layout

\begin_layout Plain Layout

NuSMV > simulate -r -k 3
\end_layout

\begin_layout Plain Layout

********  Simulation Starting From State 2.4   ********
\end_layout

\begin_layout Plain Layout

NuSMV > simulate -r -k 15
\end_layout

\begin_layout Plain Layout

********  Simulation Starting From State 2.7   ********
\end_layout

\begin_layout Plain Layout

NuSMV > show_traces -t   
\end_layout

\begin_layout Plain Layout

There are 2 traces currently available.
\end_layout

\begin_layout Plain Layout

NuSMV > show_traces -v 2 
\end_layout

\begin_layout Plain Layout

    <!-- ################### Trace number: 2 ################### -->
\end_layout

\begin_layout Plain Layout

Trace Description: Simulation Trace 
\end_layout

\begin_layout Plain Layout

Trace Type: Simulation 
\end_layout

\begin_layout Plain Layout

  -> State: 2.1 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -> State: 2.2 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1001
\end_layout

\begin_layout Plain Layout

  -> State: 2.3 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 1100
\end_layout

\begin_layout Plain Layout

  -> State: 2.4 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 1110
\end_layout

\begin_layout Plain Layout

  -> State: 2.5 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 110
\end_layout

\begin_layout Plain Layout

  -> State: 2.6 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -> State: 2.7 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 1110
\end_layout

\begin_layout Plain Layout

  -> State: 2.8 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 110
\end_layout

\begin_layout Plain Layout

  -> State: 2.9 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -> State: 2.10 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 100
\end_layout

\begin_layout Plain Layout

  -> State: 2.11 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -> State: 2.12 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1001
\end_layout

\begin_layout Plain Layout

  -> State: 2.13 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1101
\end_layout

\begin_layout Plain Layout

  -> State: 2.14 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 100
\end_layout

\begin_layout Plain Layout

  -> State: 2.15 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 100
\end_layout

\begin_layout Plain Layout

  -> State: 2.16 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1100
\end_layout

\begin_layout Plain Layout

  -> State: 2.17 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 1110
\end_layout

\begin_layout Plain Layout

  -> State: 2.18 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 110
\end_layout

\begin_layout Plain Layout

  -> State: 2.19 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 100
\end_layout

\begin_layout Plain Layout

  -> State: 2.20 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 110
\end_layout

\begin_layout Plain Layout

  -> State: 2.21 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = TRUE
\end_layout

\begin_layout Plain Layout

    done = TRUE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -> State: 2.22 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1001
\end_layout

\begin_layout Plain Layout

NuSMV > 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
5) Prove/disprove them by the NuSMV package.
\end_layout

\begin_layout Standard
1) 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

uSMV > check_ctlspec -p "AG(startOven -> AF closeDoor)"
\end_layout

\begin_layout Plain Layout

-- specification AG (startOven -> AF closeDoor)  is false
\end_layout

\begin_layout Plain Layout

-- as demonstrated by the following execution sequence
\end_layout

\begin_layout Plain Layout

Trace Description: CTL Counterexample 
\end_layout

\begin_layout Plain Layout

Trace Type: Counterexample 
\end_layout

\begin_layout Plain Layout

  -> State: 3.1 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -- Loop starts here
\end_layout

\begin_layout Plain Layout

  -> State: 3.2 <-
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

  -> State: 3.3 <-
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    state = 1001
\end_layout

\begin_layout Plain Layout

  -> State: 3.4 <-
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
2)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SMV > check_ctlspec -p "AG(startOven -> AF closeDoor=FALSE)"
\end_layout

\begin_layout Plain Layout

-- specification AG (startOven -> AF closeDoor = FALSE)  is false
\end_layout

\begin_layout Plain Layout

-- as demonstrated by the following execution sequence
\end_layout

\begin_layout Plain Layout

Trace Description: CTL Counterexample 
\end_layout

\begin_layout Plain Layout

Trace Type: Counterexample 
\end_layout

\begin_layout Plain Layout

  -> State: 4.1 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = FALSE
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    reset = FALSE
\end_layout

\begin_layout Plain Layout

    done = FALSE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

  -- Loop starts here
\end_layout

\begin_layout Plain Layout

  -> State: 4.2 <-
\end_layout

\begin_layout Plain Layout

    closeDoor = TRUE
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

  -> State: 4.3 <-
\end_layout

\begin_layout Plain Layout

    startOven = FALSE
\end_layout

\begin_layout Plain Layout

    state = 100
\end_layout

\begin_layout Plain Layout

  -> State: 4.4 <-
\end_layout

\begin_layout Plain Layout

    startOven = TRUE
\end_layout

\begin_layout Plain Layout

    state = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
3) 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "AF(reset -> EF startOven)"         
\end_layout

\begin_layout Plain Layout

-- specification
\end_layout

\begin_layout Plain Layout

AF (reset -> EF startOven)  is true
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
4)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(startOven -> closeDoor)"
\end_layout

\begin_layout Plain Layout

-- specification EF (startOven -> closeDoor)  is true
\end_layout

\begin_layout Plain Layout

NuSMV > 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
5) 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

uSMV > check_ctlspec -p "EF(startOven -> closeDoor)"
\end_layout

\begin_layout Plain Layout

-- specification EF (startOven -> closeDoor)  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(startOven)"             
\end_layout

\begin_layout Plain Layout

-- specification EF startOven  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(closeDoor)"
\end_layout

\begin_layout Plain Layout

-- specification EF closeDoor  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(reset)"    
\end_layout

\begin_layout Plain Layout

-- specification EF reset  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(done)" 
\end_layout

\begin_layout Plain Layout

-- specification EF done  is true
\end_layout

\end_inset


\end_layout

\begin_layout Standard
6)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(done -> closeDoor)"     
\end_layout

\begin_layout Plain Layout

-- specification EF (done -> closeDoor)  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(reset -> closeDoor)"
\end_layout

\begin_layout Plain Layout

-- specification EF (reset -> closeDoor)  is true
\end_layout

\begin_layout Plain Layout

NuSMV > check_ctlspec -p "EF(reset -> startOven)"
\end_layout

\begin_layout Plain Layout

-- specification EF (reset -> startOven)  is true
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
6) Explain why the property is true or false and if the test result meets
 your expectation.
\end_layout

\begin_layout Standard
The results do meet my expectations.
 For example I would expect that in # 1 "AG(startOven -> AF closeDoor)"
 will be false since it not for every path startOven preceeds closeDoor.
 It is possible to have startOven and not closed door.
 Overall, all the results confirm with the expected behavior.
 
\end_layout

\begin_layout Subsubsection*
7) Compare the model checking to simulation, and discuss the advantages
 and disadvantages of the above two verification methods.
\end_layout

\begin_layout Standard
Model checking is superior.
 Despite that I run multiple cases in the testbench, it failed to capture
 a lot of the missing states that model checking was able to analyze.
 What is more, model checking was able to uncover many conditions that the
 test bench did not cover.
 
\end_layout

\end_body
\end_document
