%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 46 368 314
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 3000 3000 600 pap
nxp
%%Page: cds 1
3 389 2995 2608 clwin
2 389 2997 2608 clwin
0 389 2999 2608 clwin
ssls
851 800 0 slc
851 800 0 sfc
6 0 1023 1777 dls
0 -32 1026 1777 dls
6 0 1023 1745 dls
1046 1777 dlt
-5 -1 dlv
-3 -5 dlv
-1 -8 dlv
0 -4 dlv
1 -8 dlv
3 -5 dlv
5 -1 dlv
3 0 dlv
5 1 dlv
3 5 dlv
2 8 dlv
0 4 dlv
-2 8 dlv
-3 5 dlv
-5 1 dlv
-3 0 dlv
dle
-22 -32 1059 1777 dls
6 0 1023 2475 dls
0 -33 1026 2475 dls
6 0 1023 2442 dls
1041 2469 dlt
4 1 dlv
4 5 dlv
0 -33 dlv
dle
6 0 1742 2126 dls
0 -33 1745 2126 dls
6 0 1742 2093 dls
1758 2118 dlt
0 2 dlv
1 3 dlv
2 2 dlv
3 1 dlv
6 0 dlv
3 -1 dlv
2 -2 dlv
2 -3 dlv
0 -3 dlv
-2 -3 dlv
-3 -5 dlv
-16 -16 dlv
22 0 dlv
dle
7 0 1720 1080 dls
0 -33 1724 1080 dls
7 0 1720 1047 dls
1738 1080 dlt
17 0 dlv
-10 -13 dlv
5 0 dlv
3 -1 dlv
2 -2 dlv
1 -5 dlv
0 -3 dlv
-1 -4 dlv
-3 -4 dlv
-5 -1 dlv
-5 0 dlv
-4 1 dlv
-2 2 dlv
-2 3 dlv
dle
4 0 2439 2161 dls
0 -22 2441 2161 dls
4 0 2439 2139 dls
2464 2146 dlt
-16 0 dlv
11 15 dlv
0 -22 dlv
dle
4 0 2439 1115 dls
0 -22 2441 1115 dls
4 0 2439 1093 dls
2461 1115 dlt
-11 0 dlv
-1 -10 dlv
1 1 dlv
3 1 dlv
4 0 dlv
3 -1 dlv
2 -2 dlv
1 -3 dlv
0 -2 dlv
-1 -3 dlv
-2 -2 dlv
-3 -1 dlv
-4 0 dlv
-3 1 dlv
-1 1 dlv
-1 2 dlv
dle
7 0 1066 731 dls
0 -33 1070 731 dls
7 0 1066 698 dls
1101 720 dlt
-2 -5 dlv
-3 -3 dlv
-5 -1 dlv
-1 0 dlv
-5 1 dlv
-3 3 dlv
-2 5 dlv
0 1 dlv
2 5 dlv
3 3 dlv
5 2 dlv
1 0 dlv
5 -2 dlv
3 -3 dlv
2 -6 dlv
0 -8 dlv
-2 -8 dlv
-3 -4 dlv
-5 -2 dlv
-3 0 dlv
-4 2 dlv
-2 3 dlv
dle
6 0 842 517 dls
0 -33 845 517 dls
6 0 842 484 dls
856 517 dlt
22 0 dlv
-16 -33 dlv
dle
7 0 1731 578 dls
0 -33 1734 578 dls
7 0 1731 545 dls
1750 572 dlt
3 2 dlv
5 4 dlv
0 -33 dlv
dle
1777 572 dlt
3 2 dlv
4 4 dlv
0 -33 dlv
dle
6 0 2418 1614 dls
0 -33 2421 1614 dls
6 0 2418 1581 dls
2437 1608 dlt
3 1 dlv
5 5 dlv
0 -33 dlv
dle
2460 1606 dlt
0 2 dlv
2 3 dlv
1 1 dlv
3 2 dlv
7 0 dlv
3 -2 dlv
1 -1 dlv
2 -3 dlv
0 -4 dlv
-2 -3 dlv
-3 -4 dlv
-15 -16 dlv
21 0 dlv
dle
6 0 842 1106 dls
0 -33 845 1106 dls
6 0 842 1073 dls
861 1100 dlt
3 1 dlv
4 5 dlv
0 -33 dlv
dle
901 1106 dlt
-16 0 dlv
-1 -14 dlv
1 1 dlv
5 2 dlv
5 0 dlv
4 -2 dlv
4 -3 dlv
1 -4 dlv
0 -4 dlv
-1 -4 dlv
-4 -3 dlv
-4 -2 dlv
-5 0 dlv
-5 2 dlv
-1 1 dlv
-2 3 dlv
dle
6 0 2418 611 dls
0 -33 2421 611 dls
6 0 2418 578 dls
2437 605 dlt
3 1 dlv
5 5 dlv
0 -33 dlv
dle
2482 589 dlt
-23 0 dlv
15 22 dlv
0 -33 dlv
dle
0 800 400 slc
0 800 400 sfc
131 0 736 1649 dls
131 0 736 1736 dls
0 131 867 1627 dls
98 0 867 1758 dls
98 0 867 1627 dls
965 1627 dlt
29 6 dlv
21 18 dlv
13 26 dlv
0 31 dlv
-13 26 dlv
-21 17 dlv
-29 7 dlv
dle
1052 1692 dpb
1048 1701 dpv
1037 1701 dpv
1031 1692 dpv
1035 1684 dpv
1046 1684 dpv
dpu
120 0 1052 1692 dls
131 0 736 2346 dls
131 0 736 2434 dls
0 130 867 2325 dls
98 0 867 2455 dls
98 0 867 2325 dls
965 2325 dlt
29 6 dlv
21 18 dlv
13 26 dlv
0 30 dlv
-13 26 dlv
-21 18 dlv
-29 6 dlv
dle
1052 2390 dpb
1048 2399 dpv
1037 2399 dpv
1031 2390 dpv
1035 2381 dpv
1046 2381 dpv
dpu
120 0 1052 2390 dls
70 0 1591 1976 dls
144 0 1434 1998 dls
1661 1976 dlt
43 8 dlv
40 22 dlv
28 35 dlv
dle
98 0 1772 2041 dls
144 0 1434 2085 dls
1569 1976 dlt
15 43 dlv
0 44 dlv
-15 44 dlv
dle
1591 1976 dlt
15 43 dlv
0 44 dlv
-15 44 dlv
dle
1772 2041 dlt
-28 35 dlv
-40 22 dlv
-43 9 dlv
dle
70 0 1591 2107 dls
70 0 1569 929 dls
144 0 1434 951 dls
1639 929 dlt
43 9 dlv
40 22 dlv
28 35 dlv
dle
98 0 1772 995 dls
1772 995 dpb
1767 1003 dpv
1757 1003 dpv
1750 995 dpv
1754 986 dpv
1765 986 dpv
dpu
144 0 1434 1038 dls
1569 929 dlt
15 44 dlv
0 43 dlv
-15 44 dlv
dle
1750 995 dlt
-28 34 dlv
-40 22 dlv
-43 9 dlv
dle
70 0 1569 1060 dls
87 0 2219 2041 dls
0 87 2371 1823 dls
2361 1910 dlt
10 33 dlv
11 -33 dlv
dle
0 66 2437 1823 dls
2426 1910 dlt
11 33 dlv
11 -33 dlv
dle
2448 1899 dpb
2443 1908 dpv
2432 1908 dpv
2426 1899 dpv
2430 1891 dpv
2441 1891 dpv
dpu
218 196 2306 1910 dbu
87 0 2502 2041 dls
87 0 2219 995 dls
0 87 2371 777 dls
2361 864 dlt
10 32 dlv
11 -32 dlv
dle
0 65 2437 777 dls
2426 864 dlt
11 32 dlv
11 -32 dlv
dle
2448 853 dpb
2443 862 dpv
2432 862 dpv
2426 853 dpv
2430 844 dpv
2441 844 dpv
dpu
218 196 2306 864 dbu
87 0 2502 995 dls
70 0 915 580 dls
144 0 780 602 dls
985 580 dlt
43 9 dlv
40 22 dlv
28 35 dlv
dle
120 0 1096 646 dls
144 0 780 689 dls
915 580 dlt
15 44 dlv
0 44 dlv
-15 43 dlv
dle
1096 646 dlt
-28 35 dlv
-40 21 dlv
-43 9 dlv
dle
70 0 915 711 dls
77 0 627 450 dls
0 109 704 395 dls
-93 -55 797 450 dls
-93 54 797 450 dls
819 450 dpb
815 458 dpv
804 458 dpv
797 450 dpv
802 441 dpv
813 441 dpv
dpu
68 0 821 450 dls
98 0 1565 428 dls
131 0 1434 450 dls
142 0 1728 493 dls
131 0 1434 537 dls
1663 428 dlt
28 6 dlv
22 18 dlv
13 26 dlv
0 30 dlv
-13 27 dlv
-22 17 dlv
-28 7 dlv
dle
0 131 1565 428 dls
98 0 1565 559 dls
-76 0 2698 1649 dls
0 -109 2622 1703 dls
94 54 2528 1649 dls
94 -55 2528 1649 dls
2528 1649 dpb
2524 1657 dpv
2513 1657 dpv
2507 1649 dpv
2511 1640 dpv
2522 1640 dpv
dpu
-67 0 2504 1649 dls
77 0 627 1038 dls
0 109 704 984 dls
-93 -54 797 1038 dls
-93 55 797 1038 dls
819 1038 dpb
815 1047 dpv
804 1047 dpv
797 1038 dpv
802 1029 dpv
813 1029 dpv
dpu
68 0 821 1038 dls
-76 0 2698 646 dls
0 -109 2622 700 dls
94 54 2528 646 dls
94 -55 2528 646 dls
2528 646 dpb
2524 654 dpv
2513 654 dpv
2507 646 dpv
2511 637 dpv
2522 637 dpv
dpu
-67 0 2504 646 dls
0 800 400 slc
0 800 400 sfc
0 -22 1026 1642 dls
1026 1636 dlt
5 5 dlv
3 1 dlv
4 0 dlv
3 -1 dlv
2 -5 dlv
0 -16 dlv
dle
0 -22 1073 1642 dls
1073 1637 dlt
-3 4 dlv
-4 1 dlv
-4 0 dlv
-3 -1 dlv
-4 -4 dlv
-1 -4 dlv
0 -3 dlv
1 -5 dlv
4 -3 dlv
3 -2 dlv
4 0 dlv
4 2 dlv
3 3 dlv
dle
0 -22 1085 1642 dls
1085 1636 dlt
5 5 dlv
3 1 dlv
5 0 dlv
3 -1 dlv
1 -5 dlv
0 -16 dlv
dle
0 -33 1132 1653 dls
1132 1637 dlt
-3 4 dlv
-3 1 dlv
-5 0 dlv
-3 -1 dlv
-3 -4 dlv
-2 -4 dlv
0 -3 dlv
2 -5 dlv
3 -3 dlv
3 -2 dlv
5 0 dlv
3 2 dlv
3 3 dlv
dle
1144 1645 dlt
0 2 dlv
2 3 dlv
1 1 dlv
3 2 dlv
7 0 dlv
3 -2 dlv
1 -1 dlv
2 -3 dlv
0 -3 dlv
-2 -3 dlv
-3 -5 dlv
-15 -16 dlv
21 0 dlv
dle
0 -22 1026 2340 dls
1026 2334 dlt
5 4 dlv
3 2 dlv
4 0 dlv
3 -2 dlv
2 -4 dlv
0 -16 dlv
dle
0 -22 1073 2340 dls
1073 2335 dlt
-3 3 dlv
-4 2 dlv
-4 0 dlv
-3 -2 dlv
-4 -3 dlv
-1 -5 dlv
0 -3 dlv
1 -4 dlv
4 -3 dlv
3 -2 dlv
4 0 dlv
4 2 dlv
3 3 dlv
dle
0 -22 1085 2340 dls
1085 2334 dlt
5 4 dlv
3 2 dlv
5 0 dlv
3 -2 dlv
1 -4 dlv
0 -16 dlv
dle
0 -33 1132 2351 dls
1132 2335 dlt
-3 3 dlv
-3 2 dlv
-5 0 dlv
-3 -2 dlv
-3 -3 dlv
-2 -5 dlv
0 -3 dlv
2 -4 dlv
3 -3 dlv
3 -2 dlv
5 0 dlv
3 2 dlv
3 3 dlv
dle
1144 2343 dlt
0 1 dlv
2 4 dlv
1 1 dlv
3 2 dlv
7 0 dlv
3 -2 dlv
1 -1 dlv
2 -4 dlv
0 -3 dlv
-2 -3 dlv
-3 -4 dlv
-15 -16 dlv
21 0 dlv
dle
17 -22 1744 1991 dls
-17 -22 1761 1991 dls
1778 1991 dlt
-3 -2 dlv
-3 -3 dlv
-2 -4 dlv
0 -3 dlv
2 -5 dlv
3 -3 dlv
3 -2 dlv
5 0 dlv
3 2 dlv
3 3 dlv
2 5 dlv
0 3 dlv
-2 4 dlv
-3 3 dlv
-3 2 dlv
-5 0 dlv
dle
0 -22 1801 1991 dls
1801 1982 dlt
2 4 dlv
3 3 dlv
3 2 dlv
5 0 dlv
dle
1822 1994 dlt
0 2 dlv
1 3 dlv
2 1 dlv
3 2 dlv
6 0 dlv
3 -2 dlv
2 -1 dlv
1 -3 dlv
0 -3 dlv
-1 -4 dlv
-3 -4 dlv
-16 -16 dlv
22 0 dlv
dle
0 -21 1724 944 dls
1724 938 dlt
4 5 dlv
3 1 dlv
5 0 dlv
3 -1 dlv
2 -5 dlv
0 -15 dlv
dle
1759 944 dlt
-3 -1 dlv
-3 -3 dlv
-1 -5 dlv
0 -3 dlv
1 -5 dlv
3 -3 dlv
3 -1 dlv
5 0 dlv
3 1 dlv
3 3 dlv
2 5 dlv
0 3 dlv
-2 5 dlv
-3 3 dlv
-3 1 dlv
-5 0 dlv
dle
0 -21 1783 944 dls
1783 935 dlt
1 5 dlv
3 3 dlv
4 1 dlv
4 0 dlv
dle
1803 948 dlt
0 1 dlv
2 3 dlv
1 2 dlv
3 1 dlv
6 0 dlv
4 -1 dlv
1 -2 dlv
2 -3 dlv
0 -3 dlv
-2 -3 dlv
-3 -5 dlv
-16 -15 dlv
22 0 dlv
dle
2367 2085 dlt
0 22 dlv
7 0 dlv
3 -2 dlv
2 -2 dlv
1 -2 dlv
1 -3 dlv
0 -5 dlv
-1 -3 dlv
-1 -2 dlv
-2 -2 dlv
-3 -1 dlv
-7 0 dlv
dle
2389 2085 dlt
0 22 dlv
13 0 dlv
dle
8 0 2389 2096 dls
2407 2085 dlt
0 22 dlv
14 0 dlv
dle
9 0 2407 2096 dls
2367 1038 dlt
0 22 dlv
7 0 dlv
3 -1 dlv
2 -2 dlv
1 -2 dlv
1 -3 dlv
0 -5 dlv
-1 -4 dlv
-1 -2 dlv
-2 -2 dlv
-3 -1 dlv
-7 0 dlv
dle
2389 1038 dlt
0 22 dlv
13 0 dlv
dle
8 0 2389 1050 dls
2407 1038 dlt
0 22 dlv
14 0 dlv
dle
9 0 2407 1050 dls
1076 596 dlt
-3 -2 dlv
-3 -3 dlv
-2 -5 dlv
0 -3 dlv
2 -5 dlv
3 -3 dlv
3 -1 dlv
4 0 dlv
4 1 dlv
3 3 dlv
1 5 dlv
0 3 dlv
-1 5 dlv
-3 3 dlv
-4 2 dlv
-4 0 dlv
dle
0 -22 1099 596 dls
1099 586 dlt
2 5 dlv
3 3 dlv
3 2 dlv
5 0 dlv
dle
1119 599 dlt
0 1 dlv
2 3 dlv
1 2 dlv
4 2 dlv
6 0 dlv
3 -2 dlv
1 -2 dlv
2 -3 dlv
0 -3 dlv
-2 -3 dlv
-3 -5 dlv
-15 -15 dlv
22 0 dlv
dle
763 421 dlt
1 -1 dlv
2 1 dlv
-2 2 dlv
-1 -2 dlv
dle
0 -21 764 410 dls
0 -21 777 410 dls
777 404 dlt
4 5 dlv
4 1 dlv
4 0 dlv
3 -1 dlv
2 -5 dlv
0 -15 dlv
dle
803 410 dlt
10 -21 dlv
9 21 dlv
dle
0 -22 1741 443 dls
1741 438 dlt
-3 3 dlv
-4 2 dlv
-4 0 dlv
-3 -2 dlv
-3 -3 dlv
-2 -4 dlv
0 -3 dlv
2 -5 dlv
3 -3 dlv
3 -2 dlv
4 0 dlv
4 2 dlv
3 3 dlv
dle
0 -22 1753 443 dls
1753 437 dlt
5 4 dlv
3 2 dlv
5 0 dlv
3 -2 dlv
1 -4 dlv
0 -16 dlv
dle
0 -33 1800 454 dls
1800 438 dlt
-3 3 dlv
-3 2 dlv
-5 0 dlv
-3 -2 dlv
-3 -3 dlv
-2 -4 dlv
0 -3 dlv
2 -5 dlv
3 -3 dlv
3 -2 dlv
5 0 dlv
3 2 dlv
3 3 dlv
dle
1812 446 dlt
0 2 dlv
2 3 dlv
1 1 dlv
4 2 dlv
6 0 dlv
3 -2 dlv
1 -1 dlv
2 -3 dlv
0 -3 dlv
-2 -4 dlv
-3 -4 dlv
-15 -16 dlv
22 0 dlv
dle
2503 1708 dlt
1 -2 dlv
2 2 dlv
-2 1 dlv
-1 -1 dlv
dle
0 -22 2504 1697 dls
0 -22 2517 1697 dls
2517 1690 dlt
4 5 dlv
3 2 dlv
5 0 dlv
3 -2 dlv
2 -5 dlv
0 -15 dlv
dle
2543 1697 dlt
9 -22 dlv
10 22 dlv
dle
763 1010 dlt
1 -2 dlv
2 2 dlv
-2 1 dlv
-1 -1 dlv
dle
0 -22 764 999 dls
0 -22 777 999 dls
777 993 dlt
4 4 dlv
4 2 dlv
4 0 dlv
3 -2 dlv
2 -4 dlv
0 -16 dlv
dle
803 999 dlt
10 -22 dlv
9 22 dlv
dle
2503 705 dlt
1 -2 dlv
2 2 dlv
-2 1 dlv
-1 -1 dlv
dle
0 -22 2504 694 dls
0 -22 2517 694 dls
2517 688 dlt
4 4 dlv
3 2 dlv
5 0 dlv
3 -2 dlv
2 -4 dlv
0 -16 dlv
dle
2543 694 dlt
9 -22 dlv
10 22 dlv
dle
224 749 1000 slc
224 749 1000 sfc
87 0 1172 1692 dls
0 306 1259 1692 dls
175 0 1259 1998 dls
349 0 1870 2041 dls
196 0 126 2346 dls
638 2434 dpb
634 2442 dpv
623 2442 dpv
616 2434 dpv
621 2425 dpv
632 2425 dpv
dps
545 0 889 1038 dls
109 0 627 2434 dls
0 567 2829 2041 dls
2202 0 627 2608 dls
240 0 2589 2041 dls
349 0 1870 995 dls
1003 0 1870 493 dls
240 0 2589 995 dls
0 654 344 689 dls
2485 0 344 1343 dls
638 602 dpb
634 611 dpv
623 611 dpv
616 602 dpv
621 593 dpv
632 593 dpv
dps
545 0 889 450 dls
0 218 2371 1605 dls
0 348 2829 995 dls
153 0 627 602 dls
0 306 344 1343 dls
414 0 322 1736 dls
0 87 627 951 dls
0 1396 627 1038 dls
0 349 627 602 dls
0 174 627 2434 dls
807 0 627 951 dls
638 951 dpb
634 960 dpv
623 960 dpv
616 951 dpv
621 942 dpv
632 942 dpv
dps
414 0 322 2346 dls
0 610 322 1736 dls
333 2346 dpb
329 2355 dpv
318 2355 dpv
311 2346 dpv
315 2338 dpv
326 2338 dpv
dps
0 152 627 450 dls
87 0 1216 646 dls
0 109 1303 537 dls
131 0 1303 537 dls
436 0 344 689 dls
0 197 2371 580 dls
0 131 2437 646 dls
218 0 2698 646 dls
218 0 2698 1649 dls
0 174 2437 1649 dls
392 0 344 1649 dls
355 1343 dpb
350 1352 dpv
339 1352 dpv
333 1343 dpv
337 1335 dpv
348 1335 dpv
dps
87 0 1172 2390 dls
0 305 1259 2085 dls
175 0 1259 2085 dls
224 749 1000 slc
224 749 1000 sfc
2795 1681 dlt
-2 2 dlv
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
-1 -4 dlv
0 -5 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
4 0 dlv
2 1 dlv
2 2 dlv
2 2 dlv
dle
2802 1686 dlt
0 -22 dlv
12 0 dlv
dle
0 -22 2819 1686 dls
-15 -15 2834 1686 dls
9 -12 2825 1676 dls
2838 678 dlt
-1 2 dlv
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
-1 -3 dlv
0 -6 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
4 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
dle
2845 683 dlt
0 -22 dlv
13 0 dlv
dle
0 -22 2863 683 dls
-15 -15 2878 683 dls
10 -12 2868 673 dls
2340 676 dlt
-3 -1 dlv
-2 -2 dlv
-1 -2 dlv
0 -4 dlv
1 -2 dlv
2 -2 dlv
3 -1 dlv
3 -1 dlv
5 0 dlv
3 1 dlv
2 1 dlv
2 2 dlv
1 2 dlv
0 4 dlv
-1 2 dlv
-2 2 dlv
-2 1 dlv
dle
2334 684 dlt
22 0 dlv
0 12 dlv
dle
22 0 2334 701 dls
15 -15 2334 716 dls
12 9 2344 707 dls
1000 0 0 slc
1000 0 0 sfc
2366 1495 dlt
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
0 -4 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
3 -1 dlv
5 0 dlv
3 1 dlv
2 1 dlv
2 2 dlv
1 2 dlv
0 4 dlv
-1 2 dlv
-2 2 dlv
-2 1 dlv
dle
2361 1502 dlt
21 0 dlv
0 13 dlv
dle
21 0 2361 1520 dls
14 -15 2361 1535 dls
12 10 2370 1525 dls
7 -14 2929 500 dls
2942 500 dlt
-6 -14 dlv
-2 -4 dlv
-2 -2 dlv
-3 -1 dlv
-1 0 dlv
dle
11 -15 44 2354 dls
-11 -15 55 2354 dls
824 1747 dlt
9 22 dlv
8 -22 dlv
dle
10 0 828 1754 dls
828 1671 dlt
9 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
-9 0 dlv
0 21 dlv
9 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
dle
1086 1725 dlt
8 -10 dlv
0 -12 dlv
dle
-9 -10 1103 1725 dls
824 2444 dlt
9 22 dlv
8 -22 dlv
dle
10 0 828 2452 dls
828 2369 dlt
9 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -4 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
-9 0 dlv
0 22 dlv
9 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
dle
1086 2423 dlt
8 -11 dlv
0 -11 dlv
dle
-9 -11 1103 2423 dls
1522 2096 dlt
8 21 dlv
9 -21 dlv
dle
11 0 1525 2103 dls
1525 2020 dlt
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -3 dlv
-1 -1 dlv
-3 -1 dlv
-10 0 dlv
0 22 dlv
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
dle
1784 2074 dlt
8 -11 dlv
0 -11 dlv
dle
-8 -11 1800 2074 dls
1522 1049 dlt
8 22 dlv
9 -22 dlv
dle
11 0 1525 1056 dls
1525 973 dlt
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
-10 0 dlv
0 22 dlv
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
dle
1784 1027 dlt
8 -10 dlv
0 -11 dlv
dle
-8 -10 1800 1027 dls
2357 1981 dlt
-1 2 dlv
-2 3 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -3 dlv
-1 -2 dlv
-1 -3 dlv
0 -5 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
4 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
dle
0 -22 2365 1987 dls
0 -22 2373 1987 dls
-10 -10 2383 1979 dls
7 -8 2377 1973 dls
2423 1974 dlt
-1 2 dlv
-2 2 dlv
-2 1 dlv
-5 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
-1 -3 dlv
0 -6 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
5 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
dle
0 -22 2430 1979 dls
0 -22 2438 1979 dls
-11 -11 2449 1972 dls
7 -8 2443 1965 dls
48 0 2404 1983 dls
2475 2052 dlt
-3 -1 dlv
-2 -2 dlv
-1 -2 dlv
-1 -3 dlv
0 -5 dlv
1 -4 dlv
1 -2 dlv
2 -2 dlv
3 -1 dlv
4 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
1 4 dlv
0 5 dlv
-1 3 dlv
-1 2 dlv
-2 2 dlv
-2 1 dlv
-4 0 dlv
dle
6 -6 2478 2034 dls
2323 2030 dlt
0 22 dlv
8 0 dlv
3 -1 dlv
2 -2 dlv
1 -2 dlv
1 -3 dlv
0 -5 dlv
-1 -4 dlv
-1 -2 dlv
-2 -2 dlv
-3 -1 dlv
-8 0 dlv
dle
2357 935 dlt
-1 2 dlv
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
-1 -3 dlv
0 -5 dlv
1 -4 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
4 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
dle
0 -22 2365 940 dls
0 -22 2373 940 dls
-10 -11 2383 933 dls
7 -9 2377 927 dls
2423 927 dlt
-1 2 dlv
-2 2 dlv
-2 1 dlv
-5 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
-1 -3 dlv
0 -5 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
5 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
dle
0 -21 2430 932 dls
0 -21 2438 932 dls
-11 -10 2449 925 dls
7 -8 2443 919 dls
48 0 2404 936 dls
2475 1006 dlt
-3 -2 dlv
-2 -2 dlv
-1 -2 dlv
-1 -3 dlv
0 -5 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
3 -1 dlv
4 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
1 3 dlv
0 5 dlv
-1 3 dlv
-1 2 dlv
-2 2 dlv
-2 2 dlv
-4 0 dlv
dle
6 -6 2478 988 dls
2323 984 dlt
0 22 dlv
8 0 dlv
3 -2 dlv
2 -2 dlv
1 -2 dlv
1 -3 dlv
0 -5 dlv
-1 -3 dlv
-1 -2 dlv
-2 -2 dlv
-3 -1 dlv
-8 0 dlv
dle
868 700 dlt
8 22 dlv
9 -22 dlv
dle
11 0 871 708 dls
871 624 dlt
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
-10 0 dlv
0 22 dlv
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 -1 dlv
-3 -2 dlv
dle
1108 678 dlt
8 -10 dlv
0 -11 dlv
dle
-9 -10 1125 678 dls
661 454 dlt
8 22 dlv
9 -22 dlv
dle
10 0 664 461 dls
824 476 dlt
9 -11 dlv
0 -11 dlv
dle
-8 -11 841 476 dls
1522 548 dlt
8 21 dlv
9 -21 dlv
dle
11 0 1525 555 dls
1525 472 dlt
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
-1 -2 dlv
-3 -1 dlv
-10 0 dlv
0 22 dlv
10 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
dle
1762 526 dlt
8 -11 dlv
0 -11 dlv
dle
-9 -11 1779 526 dls
2645 1623 dlt
8 21 dlv
9 -21 dlv
dle
10 0 2648 1630 dls
2481 1644 dlt
9 -10 dlv
0 -11 dlv
dle
-8 -10 2498 1644 dls
661 1043 dlt
8 21 dlv
9 -21 dlv
dle
10 0 664 1050 dls
824 1064 dlt
9 -10 dlv
0 -11 dlv
dle
-8 -10 841 1064 dls
2645 620 dlt
8 21 dlv
9 -21 dlv
dle
10 0 2648 627 dls
2481 641 dlt
9 -10 dlv
0 -11 dlv
dle
-8 -10 2498 641 dls
1000 0 0 slc
1000 0 0 sfc
728 1727 745 1745 dbs
728 1640 745 1657 dbs
1164 1684 1181 1701 dbs
728 2425 745 2442 dbs
728 2338 745 2355 dbs
1164 2381 1181 2399 dbs
1425 1989 1443 2006 dbs
1425 2076 1443 2093 dbs
1861 2032 1879 2050 dbs
1425 942 1443 960 dbs
1425 1029 1443 1047 dbs
1861 986 1879 1003 dbs
2210 2032 2228 2050 dbs
2363 1814 2380 1832 dbs
2428 1814 2446 1832 dbs
2581 2032 2598 2050 dbs
2210 986 2228 1003 dbs
2363 768 2380 785 dbs
2428 768 2446 785 dbs
2581 986 2598 1003 dbs
771 593 789 611 dbs
771 681 789 698 dbs
1207 637 1225 654 dbs
619 441 636 458 dbs
880 441 898 458 dbs
82 2327 dpb
82 2366 dpv
106 2366 dpv
126 2346 dpv
106 2327 dpv
dps
1425 441 1443 458 dbs
1425 528 1443 545 dbs
1861 484 1879 502 dbs
2873 474 dpb
2873 513 dpv
2897 513 dpv
2916 493 dpv
2897 474 dpv
dps
2391 1561 dpb
2352 1561 dpv
2352 1585 dpv
2371 1605 dpv
2391 1585 dpv
dps
2690 1640 2707 1657 dbs
2428 1640 2446 1657 dbs
619 1029 636 1047 dbs
880 1029 898 1047 dbs
2690 637 2707 654 dbs
2428 637 2446 654 dbs
0 389 3000 2610 clwin
gfs
%%Trailer
%%EOF
